set_environment(){
    # 1. Function definition
    if [ $# -eq 1 ]; then
        # 2. Check if exactly one argument is provided
        env_file_path=$1
        # 3. Assign the first argument to env_file_path
        echo "Setting Environment Variables:"
        # 4. Print a message
        while IFS= read -r line || [[ -n "$line" ]]; do
            # 5. Read file line by line, handling last line without newline
            if [[ ! "$line" =~ ^\# && -n "$line" ]]; then
                # 6. Skip comments and empty lines
                key=$(echo "$line" | cut -d'=' -f1)
                # 7. Extract the key (part before =)
                value=$(echo "$line" | cut -d'=' -f2-)
                # 8. Extract the value (part after =)
                expanded_value=$(eval echo "$value")
                # 9. Expand any variables in the value
                export "$key=$expanded_value"
                # 10. Export the key-value pair
                echo "$key"
                # 11. Print the key that was set
            fi
        done < "$env_file_path"
        # 12. Specify the file to read from
    else
        echo "Bad input args. Please specify a SINGLE path to a .env file"
        return 1
        # 13. Error handling for incorrect number of arguments
    fi
    echo ""
    # 14. Print a blank line at the end
}


unset_environment(){
    # takes path to env file
    if [ $# -eq 1 ]; then
        env_file_path=$1
        echo "Unsetting Environment Variables:"
        unset $(grep -v '^#' ${env_file_path} | awk 'BEGIN { FS = "=" } ; { print $1 }')
        echo "$(grep -v '^#' ${env_file_path}| awk 'BEGIN { FS = "=" } ; { print $1 }')"
    else
        echo "Bad input args. Please specify a SINGLE path to a .env file"
        return 1
    fi
}
